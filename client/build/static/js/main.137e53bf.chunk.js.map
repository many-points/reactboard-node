{"version":3,"sources":["utils/timeout.js","utils/date.js","utils/dubs.js","components/Post.js","components/Form.js","components/Loading.js","components/Thread.js","components/ThreadPreview.js","components/Board.js","App.js","serviceWorker.js","index.js"],"names":["fetchTimeout","url","options","timeout","arguments","length","undefined","Promise","race","fetch","resolve","reject","setTimeout","Error","formatDate","date","pad","n","concat","toLocaleDateString","replace","getHours","getMinutes","getSeconds","checkDubs","hash","parts","split","Post","props","Date","createdAt","threadUpdatedAt","isThread","humanId","dubs","images","react_default","a","createElement","className","index","href","isOp","Fragment","linkTo","Link","to","src","text","Form","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","messages","default","hotkey","empty","buttonText","state","message","alert","loading","filename","file","threadForm","event","_this2","setState","target","value","_this3","preventDefault","trim","submit","then","res","keyCode","altKey","refs","click","files","name","onSubmit","handleSubmit","bind","rows","onChange","handleChange","onKeyDown","handleShortcut","type","ref","onClick","fileButton","style","display","uploadFile","Component","Loading","error","Thread","id","op","posts","form","json","data","catch","console","log","formdata","FormData","append","request","method","headers","Authentication","token","body","postId","post","find","_id","indexOf","updpost","JSON","parse","stringify","push","path","toConsumableArray","slice","filedata","_this4","Content-Type","success","window","scrollTo","document","scrollHeight","addImage","assign","_this5","components_Form","key","addPost","image","components_Loading","map","components_Post","ThreadPreview","opPost","postCount","Board","threads","thread","addThread","components_ThreadPreview","updatedAt","App","BrowserRouter","Route","exact","render","components_Board","components_Thread","match","params","Boolean","location","hostname","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.137e53bf.chunk.js","sourcesContent":["function fetchTimeout(url, options, timeout = 15000) {\n  return Promise.race([\n    fetch(url, options),\n    new Promise((resolve, reject) => setTimeout(() => reject(new Error('Request timed out.')), timeout))\n  ]);\n}\n\nexport default fetchTimeout;","function formatDate(date) {\n  const pad = (n) => n < 10 ? '0' + n : n;\n  return `${date.toLocaleDateString().replace(/\\s/g, '\\xa0')}\\xa0` +\n         `${pad(date.getHours())}:${pad(date.getMinutes())}:${pad(date.getSeconds())}`;\n};\n\nexport { formatDate };","function checkDubs(hash) {\n  const parts = hash.split('~');\n  if (parts.length !== 2) return false;\n  return parts[0] == parts[1];\n}\n\nexport { checkDubs };","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { formatDate } from '../utils/date';\nimport { checkDubs } from '../utils/dubs';\n\nfunction Post(props) {\n  const date = formatDate(new Date(props.createdAt));\n  const threadUpdatedAt = props.isThread ? formatDate(new Date(props.threadUpdatedAt)) : null;\n  const humanId = props.humanId || 'nothing';\n  const dubs = checkDubs(humanId);\n  const images = props.images;\n  return (\n    <div className='post slide-up'>\n      <div className='postTop'>\n        <div className='postTopLeft'>\n          {`${props.index}\\xa0`}\n          <a href='#' className={`postId ${dubs ? 'dubs' : ''}`}>\n            <span>{humanId}</span>\n            {props.isOp && <>{'~'}<span className='op'>op</span></>}\n          </a>\n          {props.linkTo && <Link className='postLink' to={`/thread/${props.linkTo}`}>~</Link>}\n        </div>\n        <div className='postTopRight'>\n          <span className='postTimestamp'>{date}</span>\n        </div>\n      </div>\n     {images && images.length !== 0 && <img className='postImage' src={'/' + images[0]}></img>}\n     <p className='postText unstyled'>{props.text}</p>\n     <div className='postBottom'>\n      <div className='postBottomLeft'>\n      </div>\n      <div className='postBottomRight'>\n        {props.isThread && <span className='lastPostTimestamp'>{`Last\\xa0update:\\xa0${threadUpdatedAt}`}</span>}\n      </div>\n     </div>\n    </div>\n  );\n}\n\nPost.propTypes = {\n  id:        PropTypes.string.isRequired,\n  humanId:   PropTypes.string.isRequired,\n  text:      PropTypes.string,\n  createdAt: PropTypes.string.isRequired,\n  isOp:      PropTypes.bool.isRequired\n}\n\nexport default Post;","import React, { Component } from 'react';\n\nclass Form extends Component {\n  messages = {\n    default: '',\n    hotkey: 'Press\\xa0Alt+Enter\\xa0to\\xa0post',\n    empty:  'Posts\\xa0can\\'t\\xa0be\\xa0empty'\n  }\n\n  buttonText = 'Post';\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      message: 'hotkey',\n      alert: false,\n      loading: false,\n      filename: '',\n      file: null\n    }\n    if(props.threadForm) {\n      this.messages.hotkey = 'Press\\xa0Alt+Enter\\xa0to\\xa0create\\xa0thread';\n      this.buttonText = 'Create';  \n    }\n  }\n  \n  handleChange(event) {\n    this.setState({text: event.target.value});\n    setTimeout(() => this.setState({message: 'hotkey', alert: false}), 0);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({alert: false});\n    const text = this.state.text.trim();\n    const filename = this.state.filename.trim();\n    const file = this.state.file;\n    if(text === '') {\n      setTimeout(() => this.setState({message: 'empty', alert: true}), 100);\n      return;\n    }\n    this.setState({loading: true});\n    this.props.submit({text}, {file})\n    .then(res => {\n      this.setState({text: '', loading: false})\n    });\n  }\n\n  handleShortcut(event) {\n    if (event.keyCode === 13 && event.altKey) {\n      event.preventDefault();\n      this.refs.submit.click();\n    }\n  }\n\n  uploadFile(event) {\n    this.setState({\n      filename: event.target.files[0].name,\n      file: event.target.files[0],\n    });\n  }\n\n  fileButton(event) {\n    event.preventDefault();\n    this.refs.file.click();\n  }\n\n  render() {\n    return (\n      <div className='floaty'>\n        <form className='form slide-up' onSubmit={this.handleSubmit.bind(this)}>\n          <textarea\n            className='formTextarea' rows='7'\n            value={this.state.text}\n            onChange={this.handleChange.bind(this)}\n            onKeyDown={this.handleShortcut.bind(this)} />\n          <div className='formButtons'>\n            <div className='formRight'>\n              <input className='formSubmit btn' type='submit' value={this.buttonText} ref='submit' />\n              <button className='formFile btn' onClick={this.fileButton.bind(this)}>\n                <span>Upload file</span>\n              </button>\n              <input ref='file' type='file' style={{display: 'none'}} onChange={this.uploadFile.bind(this)} />\n              <div className='formFilename'>{this.state.filename && `File:\\xa0${this.state.filename}`}</div>\n            </div>\n            <div className='formLeft'>\n              <div className={`formMessageBox ${this.state.alert ? 'textAlert' : ''}`}>\n                {this.messages[this.state.message]}\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Form;","import React from 'react';\n\nfunction Loading(props) {\n  return <div className='loading'><div className={props.error ? 'loadingError' : ''}></div></div>;\n}\n\nexport default Loading;","import React, { Component } from 'react';\nimport fetch from '../utils/timeout';\n\nimport Post from './Post';\nimport Form from './Form';\nimport Loading from './Loading';\n\n\nclass Thread extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.id,\n      op: '',\n      posts: [],\n      loading: false,\n      error: false,\n      form: false\n    }\n  }\n\n  componentWillMount() {\n    this.setState({ loading: true });\n    fetch(`/api/posts/${this.state.id}`)\n    .then(res => res.json())\n    .then(res => this.setState({ posts: res.data.posts, loading: false, op: res.data.op, form: true }))\n    .catch(error => {\n      console.error(error);\n      this.setState({error: true});\n    });\n  }\n  addImage(data) {\n    console.log(data)\n    const formdata = new FormData();\n    formdata.append('file', data.file);\n    console.log(formdata)\n    const request = {\n      method: 'POST',\n      headers: { 'Authentication': data.token },\n      body: formdata\n    }\n    return fetch(`/api/images/${data.postId}`, request)\n    .then(res => res.json())\n    .then(res => {\n      const post = this.state.posts.find(post => post._id === data.postId);\n      const index = this.state.posts.indexOf(post)\n      // TODO: change this\n      const updpost = JSON.parse(JSON.stringify(post));\n      updpost.images.push(res.path);\n      const posts = [...this.state.posts.slice(0, index), updpost, ...this.state.posts.slice(index+1)];\n      this.setState({ posts });\n    })\n    .catch(error => {\n      console.error(error);\n      setTimeout(() => this.setState({error: true}));\n    });\n  }\n\n  addPost(data, filedata) {\n    const request = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json; charset=utf-8' },\n      body: JSON.stringify(data)\n    };\n    this.setState({ loading: true });\n    return fetch(`/api/posts/${this.state.id}`, request)\n    .then(res => res.json())\n    .then(res => {\n      if(res.success === false) throw Error('Request failed');\n      this.setState({ posts: [...this.state.posts, res.post], loading: false },\n        () => window.scrollTo(0, document.body.scrollHeight));\n      if(filedata.file) {\n        this.addImage(Object.assign(filedata, {postId: res.post._id, token: res.post.token}));\n      }\n    })\n    .catch(error => {\n      console.error(error);\n      setTimeout(() => this.setState({error: true}));\n    });\n  }\n\n  render() {\n    const form = this.state.form &&\n      <Form \n        key='form'\n        id={this.state.id}\n        submit={this.addPost.bind(this)}\n        image={this.addImage.bind(this)}\n      />;\n    const loading = (this.state.loading || this.state.error) && <Loading error={this.state.error} />;\n    const posts = this.state.posts.map((post, index) => {\n      return (\n        <li key={post._id}>\n          <Post id={post._id}\n                index={index}\n                humanId={post.humanId}\n                text={post.text}\n                createdAt={post.createdAt}\n                isOp={post._id === this.state.op}\n                images={post.images} />\n        </li>\n      );\n    });\n    return (\n      <>\n        <ul className='unstyled posts floaty'>\n          {posts}\n        </ul>\n        {form}\n        {loading}\n      </>\n    );\n  }\n}\n\nexport default Thread;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { formatDate } from '../utils/date';\nimport { checkDubs } from '../utils/dubs';\n\nimport Post from './Post';\n\nclass ThreadPreview extends Component {\n  render() {\n    const date = formatDate(new Date(this.props.createdAt));\n    const threadUpdatedAt = formatDate(new Date(this.props.threadUpdatedAt));\n    const humanId = this.props.humanId || 'nothing';\n    const dubs = checkDubs(humanId);\n    const images = this.props.images;\n    const opPost = (\n      <li key='op'>\n      <div className='post threadOp slide-up'>\n      <div className='postTop'>\n        <div className='postTopLeft'>\n          <a href='#' className={`postId ${dubs ? 'dubs' : ''}`}>\n            <span>{'0\\xa0' + humanId}</span>\n          </a>\n          {this.props.linkTo && <Link className='postLink' to={`/thread/${this.props.linkTo}`}>~</Link>}\n        </div>\n        <div className='postTopRight'>\n          <span className='postTimestamp'>{date}</span>\n        </div>\n      </div>\n      {images && images.length !== 0 && <img src={'/' + images[0]}></img>}\n      <p className='postText unstyled'>{this.props.text}</p>\n      <div className='postBottom'>\n        <div className='postBottomLeft'>\n          <span className='postCount'>{`Total\\xa0posts:\\xa0${this.props.postCount || '1'}`}</span>\n        </div>\n        <div className='postBottomRight'>\n          <span className='lastPostTimestamp'>{`Last\\xa0update:\\xa0${threadUpdatedAt}`}</span>\n        </div>\n      </div>\n    </div>\n    </li>\n    );\n    const posts = this.props.posts.map((post, index) => {\n      return ((post._id !== this.props.id) &&\n        <li key={post._id}>\n          <Post id={post._id}\n                index={index + this.props.postCount - this.props.posts.length}\n                humanId={post.humanId}\n                text={post.text}\n                createdAt={post.createdAt}\n                isOp={false}\n                images={post.images} />\n        </li>\n      );\n    });\n    return (\n      <ul className='threadPreview unstyled floaty'>\n        {opPost}\n        {posts}\n      </ul>\n    );\n  }\n}\n\nThreadPreview.propTypes = {\n  id:              PropTypes.string.isRequired,\n  humanId:         PropTypes.string.isRequired,\n  text:            PropTypes.string,\n  createdAt:       PropTypes.string.isRequired,\n  linkTo:          PropTypes.string.isRequired,\n  threadUpdatedAt: PropTypes.string.isRequired\n\n}\n\nexport default ThreadPreview;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport fetch from '../utils/timeout';\n\nimport Form from './Form';\nimport Loading from './Loading';\nimport ThreadPreview from './ThreadPreview';\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      threads: [],\n      loading: false,\n      error: false,\n      form: false\n    }\n  }\n\n  componentWillMount() {\n    this.setState({ loading: true });\n    fetch(`/api/threads`)\n    .then(res => res.json())\n    .then(res => this.setState({ threads: res.data, loading: false, form: true }))\n    .catch(error => {\n      console.error(error);\n      this.setState({error: true});\n    });\n  }\n\n  addThread(data) {\n    const request = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json; charset=utf-8' },\n      body: JSON.stringify(data)\n    }\n    this.setState({ loading: true });\n    return fetch(`/api/threads`, request)\n    .then(res => res.json())\n    .then(res => {\n      if(res.success === false) throw Error('Request failed');\n      this.setState({ threads: [res.thread, ...this.state.threads], loading: false },\n        () => window.scrollTo(0, 0));\n    })\n    .catch(error => {\n      setTimeout(() => this.setState({error: true}));\n    });\n  }\n\n  render() {\n    const form = this.state.form && <Form id={this.state.id} submit={this.addThread.bind(this)} threadForm={true}/>;\n    const loading = (this.state.loading || this.state.error) && <Loading error={this.state.error} />;\n    const threads = this.state.threads.map((thread, index) => {\n      return (\n        <li key={thread._id}>\n          <ThreadPreview\n            id={thread.op._id}\n            humanId={thread.op.humanId}\n            text={thread.op.text}\n            createdAt={thread.op.createdAt}\n            linkTo={thread._id}\n            threadUpdatedAt={thread.updatedAt}\n            posts={thread.posts}\n            postCount={thread.postCount}\n            images={thread.op.images[0]} />\n        </li>\n      );\n    });\n    return (\n      <>\n        <ul className='unstyled posts'>\n          {threads}\n        </ul>\n        {form}\n        {loading}\n      </>\n    );\n  }\n}\n\nexport default Board;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\n\nimport Thread from './components/Thread';\nimport Board from './components/Board';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    const renderThread = (props) => {\n      return <Thread id={props.match.params.id} />;\n    }\n    const renderThreadList = (props) => {\n      return <Board />;\n    }\n\n    return (\n      <Router>\n        <div className='container'>\n          <Route exact path='/' render={renderThreadList} />\n          <Route exact path='/thread/:id' render={renderThread} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}